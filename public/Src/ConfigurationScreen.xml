<Ui xmlns="http://www.blizzard.com/wow/ui/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
    <Frame name="AFKAnsweringMachine_ConfigScreen" toplevel="true" frameStrata="DIALOG" movable="true" enableMouse="true" hidden="true" parent="UIParent" clampedToScreen="true">
        <Scripts>
            <OnLoad>
            self:RegisterEvent("ADDON_LOADED")
            self:RegisterForDrag("LeftButton")
            self:RegisterEvent("CHAT_MSG_WHISPER");
            self:RegisterEvent("PLAYER_FLAGS_CHANGED");

            local function eventHandler(AFKAnsweringMachine_ConfigScreen, event, arg1, ...)
                if (event == "ADDON_LOADED" and arg1 == "AFKAnsweringMachine") then
                    print("\124cffffcee2Afk Answering Machine is loaded. To check options; type: " .. AFKAnsweringMachineMessageColor ..  "/afkam \124ror" .. AFKAnsweringMachineMessageColor .. " /AFKAnsweringMachine\124r.")
                    local date = C_AddOns.GetAddOnMetadata("AFKAnsweringMachine", "X-ResetVarsDate") 

                    -- reset out of date addons
                    if (not AFKAnsweringMachineVars == nil and AFKAnsweringMachineVars.lastResetDate ~= date) then 
                        print(AFKAnsweringMachineMessageColor .. 'Config had to be reset because of new functionality.')
                        AFKAnsweringMachineVars = nil
                    end

                    if (AFKAnsweringMachineVars == nil) then 
                        AFKAnsweringMachineVars = {};
                        AFKAnsweringMachineVars.debugMode = false;
                        AFKAnsweringMachineVars.lastResetDate = date;
                        AFKAnsweringMachineVars.channel = "SAY";
                        AFKAnsweringMachineVars.answeringMachineIsOn = true;
                        AFKAnsweringMachineVars.usePrefix = true;

                        -- show config screen when nothing is set
                        self:Show()
                    end

                    AFKAnsweringMachine_ConfigScreen_AnsweringMachine:SetChecked(AFKAnsweringMachineVars.answeringMachineIsOn);
                end

                if (AFKAnsweringMachineVars.answeringMachineIsOn == true and (event == "CHAT_MSG_WHISPER" or (event == "PLAYER_FLAGS_CHANGED" and arg1 == "player"))) then
                    if (event == "PLAYER_FLAGS_CHANGED") then 
                        AFKAnsweringMachine.AnsweringMachine.run() -- prevent that first times not doing anything
                    end 
                    
                    if (event == "CHAT_MSG_WHISPER") then 
                        AFKAnsweringMachine.AnsweringMachine.run();
                    end 
                end
            end
            self:SetScript("OnEvent", eventHandler);
            </OnLoad>
            <OnDragStart>
            self:StartMoving()
            </OnDragStart>
            <OnDragStop>
            self:StopMovingOrSizing()
            </OnDragStop>
        </Scripts>

        <Size>
            <AbsDimension x="500" y="330"/>
        </Size>
        <Anchors>
            <Anchor point="CENTER"/>
        </Anchors>

        <Layers>
            <Layer level="BACKGROUND">
                <Texture name="$parent_Background" setAllPoints="true">
                    <Color r="0" g="0" b="0" a="0.65" />
                </Texture>
            </Layer>
            <Layer level="BORDER" textureSubLevel="-5">
                <Texture inherits="UI-Frame-InnerBotLeftCorner" parentKey="InsetBorderBottomLeft">
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" x="0" y="0"/>
                    </Anchors>
                </Texture>
                <Texture inherits="UI-Frame-InnerBotRight" parentKey="InsetBorderBottomRight">
                    <Anchors>
                        <Anchor point="BOTTOMRIGHT" x="0" y="0"/>
                    </Anchors>
                </Texture>
                <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderTop">
                    <Anchors>
                        <Anchor x="0" y="2" point="TOPLEFT" relativeKey="$parent.InsetBorderTopLeft" relativePoint="TOPRIGHT"/>
                        <Anchor x="0" y="2" point="TOPRIGHT" relativeKey="$parent.InsetBorderTopRight" relativePoint="TOPLEFT"/>
                    </Anchors>
                </Texture>
                <Texture inherits="_UI-Frame-InnerBotTile" parentKey="InsetBorderBottom">
                    <Anchors>
                        <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomLeft" relativePoint="BOTTOMRIGHT"/>
                        <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="BOTTOMLEFT"/>
                    </Anchors>
                </Texture>
                <Texture inherits="!UI-Frame-InnerLeftTile" parentKey="InsetBorderLeft">
                    <Anchors>
                        <Anchor point="TOPLEFT" x="0" y="0"/>
                        <Anchor point="BOTTOMLEFT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPLEFT"/>
                    </Anchors>
                </Texture>
                <Texture inherits="!UI-Frame-InnerRightTile" parentKey="InsetBorderRight">
                    <Anchors>
                        <Anchor point="TOPRIGHT" x="0" y="0"/>
                        <Anchor point="BOTTOMRIGHT" relativeKey="$parent.InsetBorderBottomRight" relativePoint="TOPRIGHT"/>
                    </Anchors>
                </Texture>
            </Layer>
            <Layer level="ARTWORK">
                <Texture name="AFKAnsweringMachine_ConfigScreen_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
                    <Size>
                        <AbsDimension x="356" y="64"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOP">
                            <Offset>
                                <AbsDimension x="0" y="18"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </Texture>
                <FontString inherits="GameFontNormal" text="AFK Answering Machine">
                    <Anchors>
                        <Anchor point="TOP" relativeTo="AFKAnsweringMachine_ConfigScreen_Header">
                            <Offset>
                                <AbsDimension x="0" y="-14"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </FontString>
                <FontString name="answeringMachineText" inherits="GameFontNormalSmall" text="AFK Answering Machine">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="AFKAnsweringMachine_ConfigScreen_AnsweringMachine" x="50" y="-146"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Frames>
            <Button name="$parentButtonClose" inherits="UIPanelCloseButton">
                <Anchors>
                    <Anchor point="TOPRIGHT" relativePoint="TOPRIGHT">
                        <Offset>
                            <AbsDimension x="8" y="8"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <Scripts>
                    <OnClick>AFKAnsweringMachine_ConfigScreen:Hide()</OnClick>
                </Scripts>
            </Button>

            <CheckButton name="AFKAnsweringMachine_ConfigScreen_AnsweringMachine" inherits="UIPanelButtonTemplate " motionScriptsWhileDisabled="true" virtual="false">
                <Size>
                    <AbsDimension x="25" y="25"/>
                </Size>
                <Anchors>
                    <Anchor point="TOPLEFT" relativePoint="TOPLEFT">
                        <Offset>
                            <AbsDimension x="20" y="-140"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <Scripts>
                    <OnClick>
                    if ( AFKAnsweringMachine_ConfigScreen_AnsweringMachine:GetChecked() == true ) then 
                        AFKAnsweringMachine_AnsweringMachineOn()
                    else 
                        AFKAnsweringMachine_AnsweringMachineOff()
                    end
                    </OnClick>
                </Scripts>
                <NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
                <PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
                <HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
                <CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
                <DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
            </CheckButton>
        </Frames>
    </Frame>
</Ui>
